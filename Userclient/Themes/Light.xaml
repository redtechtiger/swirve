<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Global -->

    <SolidColorBrush x:Key="Color_Palette0" Color="#0077B6"/>
    <SolidColorBrush x:Key="Color_Palette1" Color="#00B4D8"/>
    <SolidColorBrush x:Key="Color_Palette2" Color="#48CAE4"/>
    <SolidColorBrush x:Key="Color_Palette3" Color="#90E0EF"/>


    <SolidColorBrush x:Key="Color_Background" Color="#EFEFEF"/>
    <SolidColorBrush x:Key="Color_Emerge" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="Color_Text" Color="#000000"/>
    <SolidColorBrush x:Key="Color_TextInverted" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="Color_TextAdditional1" Color="#000000"/>
    <SolidColorBrush x:Key="Color_TextAdditional2" Color="#000000"/>

    <SolidColorBrush x:Key="Color_Highlight0" Color="#EEEEEE"/>
    <SolidColorBrush x:Key="Color_Highlight1" Color="#DDDDDD"/>
    <SolidColorBrush x:Key="Color_Highlight2" Color="#CCCCCCCC"/>
    <SolidColorBrush x:Key="Color_Highlight4" Color="#BBBBBBBB"/>
    <SolidColorBrush x:Key="Color_Contrast" Color="#000000"/>

    <SolidColorBrush x:Key="Color_SidebarHighlight0" Color="#4C5353"/>
    <SolidColorBrush x:Key="Color_SidebarHighlight1" Color="#6C7373"/>

    <SolidColorBrush x:Key="Color_WidgetBackground" Color="#FFFFFF"/>



    <!-- Main -->

    <ControlTemplate x:Key="Sidebar_Button_CONTROL" TargetType="{x:Type ButtonBase}">
        <Border CornerRadius="10" x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            <Border.Effect>
                <DropShadowEffect BlurRadius="15" Opacity=".5"/>
            </Border.Effect>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource Color_Palette1}"/>-->
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="20" Opacity=".6"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource Color_Palette2}"/>-->
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="15" Opacity=".8"/>
                    </Setter.Value>
                </Setter>
                <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource Color_Palette2}"/>-->
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="Sidebar_Button" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="5, 15, 5, 0"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="12"/>
        <Setter Property="Background" Value="{x:Null}"/>
    </Style>

    <Style x:Key="Sidebar_Switch" TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Source" Value="/Resources/icon_switch_dark.png"/>
    </Style>

    <Style x:Key="Sidebar_Dashboard" TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Source" Value="/Resources/icon_dashboard_dark.png"/>
    </Style>

    <Style x:Key="Sidebar_Terminal" TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Source" Value="/Resources/icon_terminal_dark.png"/>
    </Style>

    <Style x:Key="Sidebar_Players" TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Source" Value="/Resources/icon_players_dark.png"/>
    </Style>

    <Style x:Key="Sidebar_Performance" TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Source" Value="/Resources/icon_performance_dark.png"/>
    </Style>

    <Style x:Key="Sidebar_Configuration" TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Source" Value="/Resources/icon_configuration_dark.png"/>
    </Style>

    <Style x:Key="Sidebar_Admin" TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Source" Value="/Resources/icon_admin_dark.png"/>
    </Style>

    <Style x:Key="Sidebar_Settings" TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Source" Value="/Resources/icon_settings_dark.png"/>
    </Style>

    <Style x:Key="Sidebar_Logout" TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Source" Value="/Resources/icon_logout_dark.png"/>
    </Style>

    <Style x:Key="Sidebar_Border" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="1" BlurRadius="20" Opacity=".25"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Content_Tabcontrol" TargetType="TabControl">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <EventTrigger RoutedEvent="SelectionChanged">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetProperty="Opacity"
                            From="0.0"
                            To="1.0"
                            Duration="0:0:0.1">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Pagetitle_Border" TargetType="Border">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Padding" Value="20,0"/>
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="Background" Value="{DynamicResource Color_Palette0}"/>
    </Style>

    <Style x:Key="Pagetitle_Label" TargetType="Label">
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="FontFamily" Value="/Fonts/#Montserrat"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{DynamicResource Color_Text}"/>
    </Style>

    <Style x:Key="Dashboard_Group_Border" TargetType="{x:Type Border}">
        <Setter Property="Height" Value="150"/>
        <Setter Property="Width" Value="300"/>
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Background" Value="{DynamicResource Color_Emerge}"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="40" Opacity=".25"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Dashboard_GroupPronounced_Border" TargetType="{x:Type Border}">
        <Setter Property="Height" Value="150"/>
        <Setter Property="Width" Value="300"/>
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="Background" Value="{DynamicResource Color_Palette1}"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="40" Opacity=".25"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Dashboard_Group_Title" TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="10, 10, 0, -10"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="/Fonts/#Roboto"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="Foreground" Value="{DynamicResource Color_Text}"/>
    </Style>

    <Style x:Key="Dashboard_MiniProgressBar" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{DynamicResource Color_Text}"/>
        <Setter Property="Background" Value="{DynamicResource Color_Emerge}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border CornerRadius="1.5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Rectangle RadiusX="1.5" RadiusY="1.5" x:Name="PART_Track"/>
                        <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                            <Rectangle RadiusX="1.5" RadiusY="1.5" x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                            <Rectangle RadiusX="1.5" RadiusY="1.5" x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="Dashboard_Console" TargetType="{x:Type TextBoxBase}">
        <Border BorderThickness="0" x:Name="border" Background="{x:Null}" SnapsToDevicePixels="True">
            <ScrollViewer x:Name="PART_ContentHost" Foreground="{DynamicResource Color_TextInverted}" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="PowerButton" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="/Fonts/#Montserrat"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Margin" Value="5, 20, 5, 20"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="{DynamicResource Color_Highlight0}"/>
        <Setter Property="Foreground" Value="{DynamicResource Color_Text}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="8" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="40" Opacity=".25"/>
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="60" Opacity=".10"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Color_Highlight2}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Color_Highlight0}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Color_Highlight4}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="Button_Freefloating0" TargetType="{x:Type ButtonBase}">
        <Border CornerRadius="15" x:Name="border" Background="{DynamicResource Color_WidgetBackground}" BorderThickness="0" SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            <Border.Effect>
                <DropShadowEffect BlurRadius="40" Opacity=".25"/>
            </Border.Effect>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="60" Opacity=".10"/>
                    </Setter.Value>
                </Setter>
                <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource Color_Palette1}"/>-->
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource Color_Highlight2}"/>
                <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource Color_Palette2}"/>-->
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource Color_Highlight2}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="Spinner" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="../Resources/busy.png"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform Angle="0"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="0" To="360" Duration="0:0:1" RepeatBehavior="Forever"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SpinnerLoad" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="../Resources/busy_dark.png"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform Angle="0"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="0" To="360" Duration="0:0:1" RepeatBehavior="Forever"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="Menutitle_Border" TargetType="Border">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Padding" Value="20,0"/>
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="Background" Value="{DynamicResource Color_Palette0}"/>
    </Style>

    <Style x:Key="Menutitle_Label" TargetType="Label">
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontFamily" Value="/Fonts/#Montserrat"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource Color_TextInverted}"/>
    </Style>


    <Style x:Key="Copyable_TextBox" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Text" Value="{Binding Text, Mode=OneWay}"/>
    </Style>


    <!-- Splash -->

    <Style x:Key="Splash_Title" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Fonts/#Montserrat"/>
        <Setter Property="FontSize" Value="60"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource Color_Palette3}"/>


    </Style>
    
</ResourceDictionary>
